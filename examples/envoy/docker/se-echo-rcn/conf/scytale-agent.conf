# Scytale Agent configuration for x509pop node attestor
#
# Assumptions: Workloads run on Unix instances
#
# Fields that must be edited:
#   server_address: IP or DNS address of the Scytale Server
#   trust_domain: SPIFFE trust domain that the Scytale Server and Scytale Agent use
#
#   private_key_path and certificate_path under x509pop NodeAttestor plugin
#     must be edited to point to the private key and certificate used for proof-
#     of-posession.  If your setup uses and intermediate certificate, uncomment
#     and edit the intermediates_path line.
#
# trust_bundle_path will likely need to be edited to point to the path of your trust bundle

agent {
  # A directory the agent can use for its runtime data
  data_dir = "/opt/scytale/data"

  # DNS name or IP address of the Scytale server
  server_address = "se-server"

  # Port number of the Scytale server
  server_port = "8081"

  # Location to bind the workload API socket 
  socket_path = "/tmp/agent.sock"

  # Path to the Scytale server CA bundle
  # If using the "disk" UpstreamCA plugin in the server, this should contain the path to
  # a copy of the cert file in the cert_file_path field of the server configuration file.
  #
  # If an UpstreamCA plugin for a 3rd-party service, such as the awssecret plugin, is
  # used, a bundle from the 3rd-party service needs to be fetched and placed in the
  # trust_bundle_path prior to agent startup.
  #
  # If no UpstreamCA plugin is used, this should contain a path to the short-term trust
  # bundle acquired from the server:
  # use the command:  
  #   scytale-server bundle show > bundle.pem
  # 
  # to extract a short-lived bundle which can be used in the agent's trust_bundle_path configuration
  # field.  Keep in mind that since the bundles exracted that way are short-lived, it will be
  # necessary to provide a means of automatically provisioning agent instances with an up-to-date
  # bundle at agent startup.
  trust_bundle_path = "/opt/scytale/conf/agent/bootstrap_ca.crt"

  # The trust domain that this agent belongs to
  trust_domain = "trust01.ryan.net"
  
  # log_file: file to write logs to.  STDOUT by default
  log_file = "/tmp/agent.log"
  
  # log_level Sets the logging level <DEBUG|INFO|WARN|ERROR>
  # default INFO
  # log_level = "DEBUG"
  
  # enable_sds:  set to true if using the SDS API on the Envoy proxy
  enable_sds = true
}

plugins {
  # x509pop: A node attestor that provides attestation data for a node that has 
  # been provisioned with an x509 identity through an out-of-band mechanism 
  # and responds to a signature based proof-of-possession challenge issued by
  # the server plugin
    NodeAttestor "x509pop" {
        plugin_data {
            # Path to the private key on disk (PEM encoded PKCS1 or PKCS8)
            private_key_path = "/opt/scytale/conf/agent/agent.key.pem"

            # The path to the certificate bundle on disk. The file must 
            # contain one or more PEM blocks, starting with the identity 
            # certificate followed by any intermediate certificates necessary for 
            # chain-of-trust validation
            certificate_path = "/opt/scytale/conf/agent/agent.crt.pem"

            # Optional. The path to a chain of intermediate certificates on disk.
            # The file must contain one or more PEM blocks, corresponding to 
            # intermediate certificates necessary for chain-of-trust validation. 
            # If the file pointed by certificate_path contains more than one 
            # certificate, this chain of certificates will be appended to it
            # intermediates_path = /opt/scytale/conf/agent/intermediate.pem
        }
    }

  # A key manager which writes the private key to disk
  KeyManager "disk" {
    plugin_data {
      # Directory in which to store the private key
      directory = "/opt/scytale/data/agent/keys"
    }
  }

  # A workload attestor which generates unix-based
  # selectors like uid, gid and sha256
  WorkloadAttestor "unix" {
    plugin_data {
      # Enable discover_workload_path to enable path and sha256 selectors
      # Requires the agent to be run either with the cap_sys_ptrace capability set,
      # as the same user as all workloads that will be attested, or as root.
      discover_workload_path = false
      
      # The limit of workload binary sizes when calculating certain selectors (e.g. sha256). If zero, no limit is enforced.
      # workload_size_limit	 = 0
    }
  }
}

#Telemetry configuration
#If telemetry is desired, it may be configured by using a dedicated telemetry { ... } section. Prometheus, Statsd, and DogStatsd are currently supported. You may use all, some, or none. Statsd and DogStatsd both support multiple declarations in the event that you want to send metrics to more than one collector.
#telemetry {
#        Prometheus {
#                port = 9988
#        }
#
#        DogStatsd {
#                address = "localhost:8125"
#        }
#
#       Statsd {
#                address = "localhost:1337"
#        }
#
#        Statsd {
#               address = "collector.example.org:8125"
#        }
#}

